* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
The flex contained becomes flexible. 
*/
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
The flex-wrap property pushes elements to the next line that dont fit on the screen. 
Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.
It specifies whether the flex items should wrap or not 
*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
It tells the browser where to position elements on the x-axis. 
Aligns flex items along the main axis of the current line of the flex container.
It is used to align the flex items; in our case, the product cards
*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
What is it doing here? 
 Specifies the components of a flexible length: the flex grow factor and flex shrink factor, and the flex basis.
 It is a shorthand property for the flex-grow, flex-shrink, and flex-basis properties.
 We are making the product card not growable, not shrinkable, and with an initial length of 400px
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
It tells the browser in which direction flex items should be positioned.
What is it doing here? 
It is telling the navigation bar to be in a column. 
Specifies how flex items are placed in the flex container, by setting the direction of the flex containerâ€™s main axis.
It defines in which direction the container wants to stack the flex items
We are telling the main body and navbar to stack vertically in a column
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
